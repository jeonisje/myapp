buildscript {
    ext {
        springBootVersion = '2.6.7' 
    }
    repositories {
        mavenCentral()
    }
    dependencies {
       classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.example'
version '1.0.0-SNAPSHOT'
sourceCompatibility = 1.8   

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.projectlombok:lombok:1.8.24')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('com.h2database:h2')
    implementation('org.springframework.boot:spring-boot-starter-mustache')
    
    implementation('org.springframework.boot:spring-boot-starter-oauth2-client')
    
    implementation('org.springframework.session:spring-session-jdbc')
    

    //implementation("org.mariadb.jdbc:mariadb-java-client")

    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'
    

    developmentOnly ('org.springframework.boot:spring-boot-devtools')

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
    	exclude module: 'junit'
    }
     
    // Use JUnit Jupiter for testing.
    testImplementation ('org.junit.jupiter:junit-jupiter-api:5.5.2') 
    testRuntimeOnly ('org.junit.jupiter:junit-jupiter-engine:5.5.2')
    
    testImplementation("org.springframework.security:spring-security-test")
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

test {
    useJUnitPlatform()
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

processResources {
	filteringCharset 'UTF-8'
}
